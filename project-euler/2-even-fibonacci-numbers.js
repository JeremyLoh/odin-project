/*
Even Fibonacci Numbers - https://projecteuler.net/problem=2
https://projecteuler.net/archives

Each new term in the Fibonacci sequence is generated by adding the previous two terms
By starting with 1 and 2, the first 10 terms will be:
1,2,3,5,8,13,21,34,55,89,...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms
*/
function sumEvenFib(n) {
  return getFibSequence(n)
    .filter((value) => value % 2 === 0)
    .reduce((previous, total) => total + previous, 0)
}

function getFibSequence(limit) {
  let first = 1
  let second = 2
  if (limit < first) {
    return []
  }
  if (limit === first) {
    return [first]
  }
  if (limit === second) {
    return [first, second]
  }
  let current = first + second
  const output = [first, second]
  while (current <= limit) {
    const next = first + second
    first = second
    second = next
    current = next
    if (current <= limit) {
      output.push(current)
    }
  }
  return output
}

console.time("sumEvenFib")
const answer = sumEvenFib(3_999_999) // answer = 4613732
console.timeEnd("sumEvenFib")

console.log(answer)
